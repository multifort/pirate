apiVersion: extensions/v1beta1
kind: List
items:
- apiVersion: ${apiVersion}
  kind: ${kind}
  metadata:
    name: ${serviceName}
    namespace: ${namespace}
    labels:
      svc: ${serviceName} 
      app: ${appName}
  spec:
    <% if(JobType == null){ %>
    replicas: ${replicas}
    <% } %>
    template:
      metadata:
        labels: 
          svc: ${serviceName} 
          app: ${appName}
      spec: 
      <% if(nodeSelectorType=="host"){ %>
        nodeName: ${nodeName}
      <% }else { %>
        nodeSelector:
        <% for(label in selectors){ %>
          ${label}
        <% } } %>
        <% if(JobType != null){ %>
        restartPolicy: OnFailure
        <% } %>
        containers:
          - name: ${serviceName}
            image: ${image}
            ports: 
            <% for(data in containerPorts){ %>
              - containerPort: ${data.key}
                protocol: ${data.value}            
            <% } %>
            <% for(port in ports){ %>
              - containerPort: ${port.targetPort}
                protocol: ${port.protocol}
            <% } %>
            <% for(port in nodePorts){ %>
              - containerPort: ${port.targetPort}
                protocol: ${port.protocol}
            <% } %>
            
           <% if(health!=null){ %>
           <% if(liveness!=null){ %>
            livenessProbe:
           <% if(livenessType == "TCP"){ %>
              tcpSocket:
                port: ${livenessPort}
           <% }else if (livenessType == "EXEC"){ %>
              exec:
                command:
                <% for(command in livenessCommand){ %>
                - command
                <% }%>
           <% }else{ %>
              httpGet:
                path: ${livenessPath}
                port: ${livenessPort}
           <% }%> 
              initialDelaySeconds: ${livenessInit}
              timeoutSeconds: ${livenessTimeout}
           <% }%>    
           <% if(readiness!=null){ %>
            readinessProbe:
              <% if(readinessType == "TCP"){ %>
              tcpSocket:
                port: ${readinessPort}
           <% }else if (readinessType == "EXEC"){ %>
              exec:
                command:
                <% for(command in readinessCommand){ %>
                - command
                <% }%>
           <% }else{ %>
              httpGet:
                path: ${readinessPath}
                port: ${readinessPort}
           <% }%> 
              initialDelaySeconds: ${readinessInit}
              timeoutSeconds: ${readinessTimeout}
            <% }%>
            <% }%>
            
            volumeMounts:
            <% if(volumeType == "tv"){ %>
            <% for(volume in volumes){ %>
            - name: ${serviceName}-volume
              mountPath: ${volume.path}
             <% } %>
            <% } else if(volumeType == "pv"){ %>
            <% for(volume in volumes){ %>
            - name: ${serviceName}-${volume.pv}-volume
              mountPath: ${volume.path}
            <% } %>
            <% } %>
            
            <% if(cmVolumes != []){ %> 
            <% for(confManage in cmVolumes){ %>
            - name: ${confManage.cmName}-volume
              mountPath: ${confManage.path}
            <% } %>
            <% } %>

            <% if(resourcesType != null){ %>
            resources:
            <% if(resourceKindType == "cpu"){ %>
              requests:
                memory: ${requestsMemory}
                cpu: ${requestsCpu}
              limits:
                memory: ${limitsMemory}
                cpu: ${limitsCpu}
            <% } else if (resourceKindType == "gpu"){ %>
              limits:
                alpha.kubernetes.io/nvidia-gpu: ${gpuNum}
            <% } %>
            <% } %>
            
            env:
            <% for(label in envs){ %>
            - name: ${label.key}
              value: ${label.value}
            <% } %>

            <% if(envFroms != []){ %>
            envFrom:
            <% for(confManage in envFroms){ %>
            - configMapRef:
                name: ${confManage.cmName}
            <% } %> 
            <% } %>

        volumes:
        <% if(volumeType == "tv"){ %>
        <% for(volume in volumes){ %>
        - name: ${serviceName}-volume
          emptyDir: {}
        <% } %>
        <% } else if (volumeType == "pv"){ %>
        <% for(volume in volumes){ %>
        - name: ${serviceName}-${volume.pv}-volume
          persistentVolumeClaim:
            claimName: ${serviceName}-${volume.pv}-claim
        <% } %>
        <% } %>

        <% if(cmVolumes != []){ %> 
        <% for(confManage in cmVolumes){ %>
        - name: ${confManage.cmName}-volume
          configMap:
            name: ${confManage.cmName}
        <% } %>
        <% } %>  

<% if(JobType == null){ %>
- apiVersion: v1
  kind: Service
  metadata:
    name: ${serviceName}
    namespace: ${namespace}
  spec:
  <% if(nodeType != null){ %>
    type: NodePort
  <% } %>
    ports:
      <% for(port in ports){ %>
      - port: ${port.port}
        nodePort: ${port.nodePort}
        targetPort: ${port.targetPort}
        protocol: ${port.protocol}
        name: http-${port.targetPort}
      <% } %>
      <% if(nodeType == null){ %>
      <% for(port in nodePorts){ %>
      - port: ${port.port}
        targetPort: ${port.targetPort}
        protocol: ${port.protocol}
        name: http-${port.targetPort}
      <% } %>
      
    <% for(var i = 0; i < containerPorts.~size; i++){ %>
      - port: ${containerPorts[i].key}
        targetPort: ${containerPorts[i].key}
        protocol: ${containerPorts[i].value}
        name: http-${i}
     <% } %>
     <% } %>
    selector:
      svc: ${serviceName} 
      app: ${appName}
      
<% } %>
